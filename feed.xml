<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://edimah.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://edimah.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-09-26T22:42:59+00:00</updated><id>https://edimah.github.io/feed.xml</id><title type="html">blank</title><subtitle>A personal website exploring some of my interests and their intersections. Often with a bit of maths or code. </subtitle><entry><title type="html">Importing and visualising Apple Health data with R</title><link href="https://edimah.github.io/blog/2025/importing-and-visualising-fitness-data/" rel="alternate" type="text/html" title="Importing and visualising Apple Health data with R"/><published>2025-09-26T22:34:16+00:00</published><updated>2025-09-26T22:34:16+00:00</updated><id>https://edimah.github.io/blog/2025/importing-and-visualising-fitness-data</id><content type="html" xml:base="https://edimah.github.io/blog/2025/importing-and-visualising-fitness-data/"><![CDATA[<p>I have been using my phone and smartwatch’s health features consistently for almost two years now. <strong>Twenty months</strong> to be exact.</p> <p>I was curious about what insights I could extract from that data, and whether I could or should adapt my training based on it.</p> <p>This post is the first in a series exploring my own Apple Health metrics through an interdisciplinary lense. It shows how I <strong>exported, imported, and cleaned</strong> my own fitness data, to <strong>visualise</strong> the activities I favoured over this time frame using R data parsing and graph building tools.</p> <hr/> <h2 id="how-does-one-export-health-data-from-ones-device-">How does one export health data from one’s device ?</h2> <p>Open Apple Health’s iPhone app:</p> <ul> <li>Go to <strong>Profile</strong>,</li> <li>Select <strong>Export all health data</strong>.</li> </ul> <p>This generates a zip file named <code class="language-plaintext highlighter-rouge">apple_health_export</code>, which once unzipped contains:</p> <ul> <li>Folders like <code class="language-plaintext highlighter-rouge">electrocardiograms</code> &amp; <code class="language-plaintext highlighter-rouge">workout-routes</code> with ECG and GPS data,</li> <li>Files <code class="language-plaintext highlighter-rouge">export.xml</code> and <code class="language-plaintext highlighter-rouge">export_cda.xml</code> — holding the same data, the latter following the Clinical Document Architecture (medical standard).</li> </ul> <p>I basically focused on <code class="language-plaintext highlighter-rouge">export.xml</code> for readability.</p> <hr/> <h2 id="importing-and-cleaning-in-r">Importing and cleaning in R</h2> <p>Using R packages <code class="language-plaintext highlighter-rouge">xml2</code>, <code class="language-plaintext highlighter-rouge">dplyr</code>, and <code class="language-plaintext highlighter-rouge">lubridate</code>, I parsed the XML export to extract nodes of interest to me (<code class="language-plaintext highlighter-rouge">Workout</code>, <code class="language-plaintext highlighter-rouge">WorkoutStatistics</code>, <code class="language-plaintext highlighter-rouge">ActivitySummary</code>), and turned each of them into tibbles, then CSV files.</p> <p>I then cleaned the data by:</p> <ul> <li>Converting date strings to R date-time objects,</li> <li>Transforming numeric strings to numbers,</li> <li>Removing unnecessary prefixes from activity names (eg. <code class="language-plaintext highlighter-rouge">HKWorkoutActivityType</code> preceding names)</li> </ul> <p>I basically used <code class="language-plaintext highlighter-rouge">tidyR</code> to make tidier datasets (pun intended). All clean and ready for analysis and visualisation.</p> <h2 id="visualising-activity-types">Visualising activity types</h2> <p>To top off this short tutorial, here is a <strong>bar plot of activity type distributions</strong> from my cleaned <code class="language-plaintext highlighter-rouge">workouts.csv</code>. It was made using <code class="language-plaintext highlighter-rouge">ggplot2</code> and <code class="language-plaintext highlighter-rouge">plotly</code>, and hovering over each bar should show counts for each workout type !</p> <iframe src="/assets/html/workout_types_20250926_221543.html" width="100%" height="600" frameborder="0"></iframe> <hr/> <p>Most of the work went into data cleaning, but this simple bar plot already gives a clear view of which workouts dominate my routine. I wouldn’t say I’m a yoga girl but I guess doing consistent “warm up” or “recovery” flows before and after other workouts tends to make things add up…</p> <p>For reproducibility, an anonymised sample of my dataset and the associated R scripts are available in my GitHub repo <strong>Apple Health Data</strong>.</p>]]></content><author><name></name></author><category term="posts"/><category term="dataviz"/><summary type="html"><![CDATA[I imported and visualised 20 months of Apple Health data to get a broader view of how I trained.]]></summary></entry></feed>